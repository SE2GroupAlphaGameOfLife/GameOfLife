plugins {
    id 'jacoco'
    id 'org.sonarqube' version '3.5.0.2730'
}
jacocoTestReport {
    reports {
        xml.enabled true
    }
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "aau/se2/glock/alpha/gameoflife/screens.*",
            ])
        }))
    }
}
test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sonarqube {
    properties {
        property "sonar.projectKey", "SE2GroupAlphaGameOfLife_GameOfLife"
        property "sonar.organization", "se2groupalphagameoflife"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
        property "sonar.coverage.exclusions", "**/GameScreen.java,**/JoinGameScreen.java,**/MainMenuScreen.java,**/StartGameScreen.java,**/BasicScreen.java"

    }
}

dependencies {
    implementation 'junit:junit:4.13.2'
    implementation 'com.badlogicgames.gdx:gdx-backend-android:1.11.0'

    implementation 'com.esotericsoftware:kryo:5.0.0'
    implementation 'com.github.crykn:kryonet:2.22.7'

    testImplementation 'org.mockito:mockito-core:4.2.0'
}

sourceSets.main.java.srcDirs = ["src/main"]
sourceSets.test.java.srcDirs = ["src/test"]

eclipse.project.name = appName + "-core"