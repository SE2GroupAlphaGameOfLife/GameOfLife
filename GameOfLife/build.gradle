buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
    }
}

plugins {
    id "org.sonarqube" version "4.0.0.2929"
    id 'jacoco'
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "GameOfLife"
        gdxVersion = '1.11.0'
        roboVMVersion = '2.3.19'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }


}

project(":android") {
    apply plugin: "com.android.application"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"

    }
}


task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled true
        xml.destination file("${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

project(":core") {
    apply plugin: "java-library"
    apply plugin: "jacoco"

    sourceSets.test.java.srcDirs = ["../core/test"]
    sourceSets {
        main {
            resources.srcDirs += ["../assets"]
        }
    }

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        api "com.kotcrab.vis:vis-ui:1.4.11"

        testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.2"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:5.9.2"
        testImplementation "org.junit.platform:junit-platform-runner:1.9.2"
        testImplementation 'org.mockito:mockito-core:3.12.4'
        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testImplementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"

        testImplementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        testImplementation "com.badlogicgames.ashley:ashley:$ashleyVersion"
        testImplementation "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        testImplementation "com.kotcrab.vis:vis-ui:1.4.11"
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            //html.destination "${buildDir}\\jacocoHtml"
        }
    }

    test {
        finalizedBy jacocoTestReport

        // specify the tests to run using the --tests option
        // multiple tests can be specified by separating them with a comma
        // example: --tests com.example.test.TestClass,test.package.AnotherTestClass
        //--tests com.mygdx.gameoflife.coreBoardTest

        systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
        }

        //jacoco {
            // Set destination file for coverage report
            //reportsDir = file("$buildDir/reports/jacoco")
        //}

    }
}


sonarqube {
    properties {
        property "sonar.projectKey", "GameOfLife"
        property "sonar.projectName", "GameOfLife"
        property "sonar.projectVersion", "0.1.0"
        property "sonar.host.url", "http://localhost:9099"
        property "sonar.token", "sqp_d74e0d1e5ac0dd94c5659d945de2f0491ed9a490"

        // Additional SonarQube properties and settings can be added here
    }
}

